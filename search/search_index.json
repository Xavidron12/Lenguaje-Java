{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"ejemplos/","title":"Ejemplos de Programaci\u00f3n en Java","text":"<p>A continuaci\u00f3n, se presentan ejemplos que incluyen cabeceras, p\u00e1rrafos, formato de texto, im\u00e1genes, listas, fragmento de c\u00f3digo, enlaces y cajas tipo \"awesomebox\".</p>"},{"location":"ejemplos/#1-cabeceras-y-formato-de-texto","title":"\ud83d\udccc 1. Cabeceras y Formato de Texto","text":""},{"location":"ejemplos/#ejemplo-de-cabeceras-y-texto-en-negrita-y-cursiva","title":"\ud83d\udd39 Ejemplo de cabeceras y texto en negrita y cursiva","text":"<p>Podemos usar diferentes niveles de cabeceras en Markdown:  </p> <p>```md</p>"},{"location":"ejemplos/#encabezado-nivel-1","title":"Encabezado Nivel 1","text":""},{"location":"ejemplos/#encabezado-nivel-2","title":"Encabezado Nivel 2","text":""},{"location":"ejemplos/#encabezado-nivel-3","title":"Encabezado Nivel 3","text":""},{"location":"introduccion/","title":"Introducci\u00f3n a Java","text":"<p>Java es un lenguaje de programaci\u00f3n de prop\u00f3sito general, basado en el paradigma de programaci\u00f3n orientada a objetos (POO).</p>"},{"location":"introduccion/#caracteristicas-principales","title":"Caracter\u00edsticas principales:","text":"<ul> <li>Portabilidad: C\u00f3digo que se ejecuta en cualquier sistema operativo.</li> <li>Orientado a Objetos: Permite reutilizaci\u00f3n de c\u00f3digo y modularidad.</li> <li>Seguro: Usa gesti\u00f3n autom\u00e1tica de memoria (Garbage Collector).</li> </ul>"},{"location":"introduccion/#mas-informacion","title":"M\u00e1s informaci\u00f3n","text":"<p>Puedes consultar m\u00e1s sobre Java en la documentaci\u00f3n oficial.</p>"},{"location":"poo/","title":"Programaci\u00f3n Orientada a Objetos (POO) en Java","text":"<p>La Programaci\u00f3n Orientada a Objetos (POO) es un paradigma de programaci\u00f3n basado en el uso de clases y objetos. Java es un lenguaje dise\u00f1ado espec\u00edficamente para este enfoque.</p>"},{"location":"poo/#conceptos-clave-de-la-poo","title":"\ud83c\udfd7\ufe0f Conceptos clave de la POO","text":"<p>1\ufe0f\u20e3 Clases: Plantillas para crear objetos. 2\ufe0f\u20e3 Objetos: Instancias de una clase. 3\ufe0f\u20e3 Encapsulaci\u00f3n: Protecci\u00f3n de datos mediante modificadores de acceso. 4\ufe0f\u20e3 Herencia: Capacidad de una clase de heredar atributos y m\u00e9todos de otra. 5\ufe0f\u20e3 Polimorfismo: Uso de una misma interfaz para distintos tipos de datos.</p>"},{"location":"poo/#ejemplo-de-una-clase-en-java","title":"Ejemplo de una Clase en Java","text":"<p>```java class Persona {     String nombre;</p> <pre><code>Persona(String nombre) {\n    this.nombre = nombre;\n}\n\nvoid mostrarNombre() {\n    System.out.println(\"Mi nombre es \" + nombre);\n}\n</code></pre> <p>}</p> <p>public class Main {     public static void main(String[] args) {         Persona p = new Persona(\"Javier\");         p.mostrarNombre();     } }</p>"},{"location":"sintaxis/","title":"Sintaxis de Java","text":"<p>Java tiene una sintaxis estructurada basada en <code>clases</code> y <code>m\u00e9todos</code>.</p>"},{"location":"sintaxis/#codigo-de-ejemplo","title":"C\u00f3digo de ejemplo:","text":"<p>```java public class HolaMundo {     public static void main(String[] args) {         System.out.println(\"\u00a1Hola, mundo!\");     } }</p>"}]}